// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.3
// source: types.proto

package types

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Xapp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Template *Template `protobuf:"bytes,1,opt,name=template,proto3" json:"template,omitempty"`
	Meta     *XappMeta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *Xapp) Reset() {
	*x = Xapp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Xapp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Xapp) ProtoMessage() {}

func (x *Xapp) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Xapp.ProtoReflect.Descriptor instead.
func (*Xapp) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{0}
}

func (x *Xapp) GetTemplate() *Template {
	if x != nil {
		return x.Template
	}
	return nil
}

func (x *Xapp) GetMeta() *XappMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

type XappMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Base           string        `protobuf:"bytes,3,opt,name=base,proto3" json:"base,omitempty"` // base template this xApp has been built from
	Status         Templatestate `protobuf:"varint,4,opt,name=status,proto3,enum=types.Templatestate" json:"status,omitempty"`
	Added          string        `protobuf:"bytes,5,opt,name=added,proto3" json:"added,omitempty"`
	Updated        string        `protobuf:"bytes,6,opt,name=updated,proto3" json:"updated,omitempty"`
	Updatedby      string        `protobuf:"bytes,7,opt,name=updatedby,proto3" json:"updatedby,omitempty"`
	Updater        string        `protobuf:"bytes,8,opt,name=updater,proto3" json:"updater,omitempty"`
	Traincount     int32         `protobuf:"varint,9,opt,name=traincount,proto3" json:"traincount,omitempty"`
	Traintimetotal int64         `protobuf:"varint,10,opt,name=traintimetotal,proto3" json:"traintimetotal,omitempty"`
	Traintimelast  int64         `protobuf:"varint,11,opt,name=traintimelast,proto3" json:"traintimelast,omitempty"`
	Predtimetotal  int64         `protobuf:"varint,12,opt,name=predtimetotal,proto3" json:"predtimetotal,omitempty"`
	Predcount      int64         `protobuf:"varint,13,opt,name=predcount,proto3" json:"predcount,omitempty"`
	Trainfreq      Freq          `protobuf:"varint,14,opt,name=trainfreq,proto3,enum=types.Freq" json:"trainfreq,omitempty"`
	Input          []*Io         `protobuf:"bytes,15,rep,name=input,proto3" json:"input,omitempty"`
	Ratingtotal    int32         `protobuf:"varint,16,opt,name=ratingtotal,proto3" json:"ratingtotal,omitempty"`
	Ratingcount    int32         `protobuf:"varint,17,opt,name=ratingcount,proto3" json:"ratingcount,omitempty"`
	Model          *string       `protobuf:"bytes,18,opt,name=model,proto3,oneof" json:"model,omitempty"`
	Trainlast      *string       `protobuf:"bytes,19,opt,name=trainlast,proto3,oneof" json:"trainlast,omitempty"`
	Train          *string       `protobuf:"bytes,20,opt,name=train,proto3,oneof" json:"train,omitempty"`
	Trainjobgroup  *string       `protobuf:"bytes,21,opt,name=trainjobgroup,proto3,oneof" json:"trainjobgroup,omitempty"`
}

func (x *XappMeta) Reset() {
	*x = XappMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XappMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XappMeta) ProtoMessage() {}

func (x *XappMeta) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XappMeta.ProtoReflect.Descriptor instead.
func (*XappMeta) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{1}
}

func (x *XappMeta) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *XappMeta) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *XappMeta) GetBase() string {
	if x != nil {
		return x.Base
	}
	return ""
}

func (x *XappMeta) GetStatus() Templatestate {
	if x != nil {
		return x.Status
	}
	return Templatestate_PREVIEW
}

func (x *XappMeta) GetAdded() string {
	if x != nil {
		return x.Added
	}
	return ""
}

func (x *XappMeta) GetUpdated() string {
	if x != nil {
		return x.Updated
	}
	return ""
}

func (x *XappMeta) GetUpdatedby() string {
	if x != nil {
		return x.Updatedby
	}
	return ""
}

func (x *XappMeta) GetUpdater() string {
	if x != nil {
		return x.Updater
	}
	return ""
}

func (x *XappMeta) GetTraincount() int32 {
	if x != nil {
		return x.Traincount
	}
	return 0
}

func (x *XappMeta) GetTraintimetotal() int64 {
	if x != nil {
		return x.Traintimetotal
	}
	return 0
}

func (x *XappMeta) GetTraintimelast() int64 {
	if x != nil {
		return x.Traintimelast
	}
	return 0
}

func (x *XappMeta) GetPredtimetotal() int64 {
	if x != nil {
		return x.Predtimetotal
	}
	return 0
}

func (x *XappMeta) GetPredcount() int64 {
	if x != nil {
		return x.Predcount
	}
	return 0
}

func (x *XappMeta) GetTrainfreq() Freq {
	if x != nil {
		return x.Trainfreq
	}
	return Freq_DAY
}

func (x *XappMeta) GetInput() []*Io {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *XappMeta) GetRatingtotal() int32 {
	if x != nil {
		return x.Ratingtotal
	}
	return 0
}

func (x *XappMeta) GetRatingcount() int32 {
	if x != nil {
		return x.Ratingcount
	}
	return 0
}

func (x *XappMeta) GetModel() string {
	if x != nil && x.Model != nil {
		return *x.Model
	}
	return ""
}

func (x *XappMeta) GetTrainlast() string {
	if x != nil && x.Trainlast != nil {
		return *x.Trainlast
	}
	return ""
}

func (x *XappMeta) GetTrain() string {
	if x != nil && x.Train != nil {
		return *x.Train
	}
	return ""
}

func (x *XappMeta) GetTrainjobgroup() string {
	if x != nil && x.Trainjobgroup != nil {
		return *x.Trainjobgroup
	}
	return ""
}

type Template struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Code         string      `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Name         string      `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Info         string      `protobuf:"bytes,4,opt,name=info,proto3" json:"info,omitempty"`
	Channel      Channel     `protobuf:"varint,5,opt,name=channel,proto3,enum=types.Channel" json:"channel,omitempty"`
	Domain       Domain      `protobuf:"varint,6,opt,name=domain,proto3,enum=types.Domain" json:"domain,omitempty"`
	Category     string      `protobuf:"bytes,7,opt,name=category,proto3" json:"category,omitempty"`
	Models       int32       `protobuf:"varint,8,opt,name=models,proto3" json:"models,omitempty"`
	Usage        int32       `protobuf:"varint,9,opt,name=usage,proto3" json:"usage,omitempty"`
	Rating       int32       `protobuf:"varint,10,opt,name=rating,proto3" json:"rating,omitempty"`
	Ratingcnt    int32       `protobuf:"varint,11,opt,name=ratingcnt,proto3" json:"ratingcnt,omitempty"`
	Created      string      `protobuf:"bytes,12,opt,name=created,proto3" json:"created,omitempty"`
	Tags         []string    `protobuf:"bytes,13,rep,name=tags,proto3" json:"tags,omitempty"`
	Train        []*Train    `protobuf:"bytes,14,rep,name=train,proto3" json:"train,omitempty"`
	Io           []*Io       `protobuf:"bytes,15,rep,name=io,proto3" json:"io,omitempty"`
	Requiretrain int32       `protobuf:"varint,16,opt,name=requiretrain,proto3" json:"requiretrain,omitempty"`
	Requirecode  int32       `protobuf:"varint,17,opt,name=requirecode,proto3" json:"requirecode,omitempty"`
	Requiredata  int32       `protobuf:"varint,18,opt,name=requiredata,proto3" json:"requiredata,omitempty"`
	Tointegrate  Tointegrate `protobuf:"varint,19,opt,name=tointegrate,proto3,enum=types.Tointegrate" json:"tointegrate,omitempty"`
	Moreinfo     *string     `protobuf:"bytes,30,opt,name=moreinfo,proto3,oneof" json:"moreinfo,omitempty"`
}

func (x *Template) Reset() {
	*x = Template{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Template) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Template) ProtoMessage() {}

func (x *Template) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Template.ProtoReflect.Descriptor instead.
func (*Template) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{2}
}

func (x *Template) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Template) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Template) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Template) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *Template) GetChannel() Channel {
	if x != nil {
		return x.Channel
	}
	return Channel_DEAD
}

func (x *Template) GetDomain() Domain {
	if x != nil {
		return x.Domain
	}
	return Domain_Other
}

func (x *Template) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *Template) GetModels() int32 {
	if x != nil {
		return x.Models
	}
	return 0
}

func (x *Template) GetUsage() int32 {
	if x != nil {
		return x.Usage
	}
	return 0
}

func (x *Template) GetRating() int32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *Template) GetRatingcnt() int32 {
	if x != nil {
		return x.Ratingcnt
	}
	return 0
}

func (x *Template) GetCreated() string {
	if x != nil {
		return x.Created
	}
	return ""
}

func (x *Template) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Template) GetTrain() []*Train {
	if x != nil {
		return x.Train
	}
	return nil
}

func (x *Template) GetIo() []*Io {
	if x != nil {
		return x.Io
	}
	return nil
}

func (x *Template) GetRequiretrain() int32 {
	if x != nil {
		return x.Requiretrain
	}
	return 0
}

func (x *Template) GetRequirecode() int32 {
	if x != nil {
		return x.Requirecode
	}
	return 0
}

func (x *Template) GetRequiredata() int32 {
	if x != nil {
		return x.Requiredata
	}
	return 0
}

func (x *Template) GetTointegrate() Tointegrate {
	if x != nil {
		return x.Tointegrate
	}
	return Tointegrate_SECONDS
}

func (x *Template) GetMoreinfo() string {
	if x != nil && x.Moreinfo != nil {
		return *x.Moreinfo
	}
	return ""
}

type Train struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode    string   `protobuf:"bytes,1,opt,name=mode,proto3" json:"mode,omitempty"`
	Channel *Channel `protobuf:"varint,2,opt,name=channel,proto3,enum=types.Channel,oneof" json:"channel,omitempty"`
	StrChan *string  `protobuf:"bytes,3,opt,name=str_chan,json=strChan,proto3,oneof" json:"str_chan,omitempty"`
	Name    *string  `protobuf:"bytes,4,opt,name=name,proto3,oneof" json:"name,omitempty"`
}

func (x *Train) Reset() {
	*x = Train{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Train) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Train) ProtoMessage() {}

func (x *Train) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Train.ProtoReflect.Descriptor instead.
func (*Train) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{3}
}

func (x *Train) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *Train) GetChannel() Channel {
	if x != nil && x.Channel != nil {
		return *x.Channel
	}
	return Channel_DEAD
}

func (x *Train) GetStrChan() string {
	if x != nil && x.StrChan != nil {
		return *x.StrChan
	}
	return ""
}

func (x *Train) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type Io struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      *string        `protobuf:"bytes,4,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Status    *Templatestate `protobuf:"varint,5,opt,name=status,proto3,enum=types.Templatestate,oneof" json:"status,omitempty"`
	StatusStr *string        `protobuf:"bytes,6,opt,name=status_str,json=statusStr,proto3,oneof" json:"status_str,omitempty"`
	Channel   *Channel       `protobuf:"varint,7,opt,name=channel,proto3,enum=types.Channel,oneof" json:"channel,omitempty"`
	StrChan   *string        `protobuf:"bytes,8,opt,name=str_chan,json=strChan,proto3,oneof" json:"str_chan,omitempty"`
}

func (x *Io) Reset() {
	*x = Io{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Io) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Io) ProtoMessage() {}

func (x *Io) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Io.ProtoReflect.Descriptor instead.
func (*Io) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{4}
}

func (x *Io) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Io) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Io) GetStatus() Templatestate {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return Templatestate_PREVIEW
}

func (x *Io) GetStatusStr() string {
	if x != nil && x.StatusStr != nil {
		return *x.StatusStr
	}
	return ""
}

func (x *Io) GetChannel() Channel {
	if x != nil && x.Channel != nil {
		return *x.Channel
	}
	return Channel_DEAD
}

func (x *Io) GetStrChan() string {
	if x != nil && x.StrChan != nil {
		return *x.StrChan
	}
	return ""
}

type Model struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Code       string           `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Name       string           `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Info       string           `protobuf:"bytes,4,opt,name=info,proto3" json:"info,omitempty"`
	Traintotal int64            `protobuf:"varint,5,opt,name=traintotal,proto3" json:"traintotal,omitempty"`
	Trainlast  int64            `protobuf:"varint,6,opt,name=trainlast,proto3" json:"trainlast,omitempty"`
	Usage      int32            `protobuf:"varint,7,opt,name=usage,proto3" json:"usage,omitempty"`
	Papers     []*ResearchPaper `protobuf:"bytes,8,rep,name=papers,proto3" json:"papers,omitempty"`
	Tags       []string         `protobuf:"bytes,9,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *Model) Reset() {
	*x = Model{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Model) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Model) ProtoMessage() {}

func (x *Model) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Model.ProtoReflect.Descriptor instead.
func (*Model) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{5}
}

func (x *Model) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Model) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Model) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Model) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *Model) GetTraintotal() int64 {
	if x != nil {
		return x.Traintotal
	}
	return 0
}

func (x *Model) GetTrainlast() int64 {
	if x != nil {
		return x.Trainlast
	}
	return 0
}

func (x *Model) GetUsage() int32 {
	if x != nil {
		return x.Usage
	}
	return 0
}

func (x *Model) GetPapers() []*ResearchPaper {
	if x != nil {
		return x.Papers
	}
	return nil
}

func (x *Model) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type Models struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Model []*Model `protobuf:"bytes,1,rep,name=model,proto3" json:"model,omitempty"`
}

func (x *Models) Reset() {
	*x = Models{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Models) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Models) ProtoMessage() {}

func (x *Models) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Models.ProtoReflect.Descriptor instead.
func (*Models) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{6}
}

func (x *Models) GetModel() []*Model {
	if x != nil {
		return x.Model
	}
	return nil
}

type ResearchPaper struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResearchPaper) Reset() {
	*x = ResearchPaper{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResearchPaper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResearchPaper) ProtoMessage() {}

func (x *ResearchPaper) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResearchPaper.ProtoReflect.Descriptor instead.
func (*ResearchPaper) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{7}
}

// A struct representing filters
type TemplatesFilters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TemplatesFilters) Reset() {
	*x = TemplatesFilters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplatesFilters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplatesFilters) ProtoMessage() {}

func (x *TemplatesFilters) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplatesFilters.ProtoReflect.Descriptor instead.
func (*TemplatesFilters) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{8}
}

type StatMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string  `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Val float32 `protobuf:"fixed32,2,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *StatMeta) Reset() {
	*x = StatMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatMeta) ProtoMessage() {}

func (x *StatMeta) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatMeta.ProtoReflect.Descriptor instead.
func (*StatMeta) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{9}
}

func (x *StatMeta) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *StatMeta) GetVal() float32 {
	if x != nil {
		return x.Val
	}
	return 0
}

type StatMetaCont struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stat []*StatMeta `protobuf:"bytes,1,rep,name=stat,proto3" json:"stat,omitempty"`
}

func (x *StatMetaCont) Reset() {
	*x = StatMetaCont{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatMetaCont) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatMetaCont) ProtoMessage() {}

func (x *StatMetaCont) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatMetaCont.ProtoReflect.Descriptor instead.
func (*StatMetaCont) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{10}
}

func (x *StatMetaCont) GetStat() []*StatMeta {
	if x != nil {
		return x.Stat
	}
	return nil
}

type XappIdentifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Template string `protobuf:"bytes,1,opt,name=template,proto3" json:"template,omitempty"`
	Xapp     string `protobuf:"bytes,2,opt,name=xapp,proto3" json:"xapp,omitempty"`
}

func (x *XappIdentifier) Reset() {
	*x = XappIdentifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XappIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XappIdentifier) ProtoMessage() {}

func (x *XappIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XappIdentifier.ProtoReflect.Descriptor instead.
func (*XappIdentifier) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{11}
}

func (x *XappIdentifier) GetTemplate() string {
	if x != nil {
		return x.Template
	}
	return ""
}

func (x *XappIdentifier) GetXapp() string {
	if x != nil {
		return x.Xapp
	}
	return ""
}

// global set of possible training status
type TrainingStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accuracy  *float32 `protobuf:"fixed32,1,opt,name=accuracy,proto3,oneof" json:"accuracy,omitempty"`
	Batch     *int32   `protobuf:"varint,2,opt,name=batch,proto3,oneof" json:"batch,omitempty"`
	Progress  *float32 `protobuf:"fixed32,3,opt,name=progress,proto3,oneof" json:"progress,omitempty"`
	Epoch     *int32   `protobuf:"varint,4,opt,name=epoch,proto3,oneof" json:"epoch,omitempty"`
	Precision *float32 `protobuf:"fixed32,5,opt,name=precision,proto3,oneof" json:"precision,omitempty"`
	Recall    *float32 `protobuf:"fixed32,6,opt,name=recall,proto3,oneof" json:"recall,omitempty"`
	Truepos   *float32 `protobuf:"fixed32,7,opt,name=truepos,proto3,oneof" json:"truepos,omitempty"`
	Trueneg   *float32 `protobuf:"fixed32,8,opt,name=trueneg,proto3,oneof" json:"trueneg,omitempty"`
	Falsepos  *float32 `protobuf:"fixed32,10,opt,name=falsepos,proto3,oneof" json:"falsepos,omitempty"`
	Falseneg  *float32 `protobuf:"fixed32,11,opt,name=falseneg,proto3,oneof" json:"falseneg,omitempty"`
	F1        *float32 `protobuf:"fixed32,12,opt,name=f1,proto3,oneof" json:"f1,omitempty"`
}

func (x *TrainingStats) Reset() {
	*x = TrainingStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrainingStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrainingStats) ProtoMessage() {}

func (x *TrainingStats) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrainingStats.ProtoReflect.Descriptor instead.
func (*TrainingStats) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{12}
}

func (x *TrainingStats) GetAccuracy() float32 {
	if x != nil && x.Accuracy != nil {
		return *x.Accuracy
	}
	return 0
}

func (x *TrainingStats) GetBatch() int32 {
	if x != nil && x.Batch != nil {
		return *x.Batch
	}
	return 0
}

func (x *TrainingStats) GetProgress() float32 {
	if x != nil && x.Progress != nil {
		return *x.Progress
	}
	return 0
}

func (x *TrainingStats) GetEpoch() int32 {
	if x != nil && x.Epoch != nil {
		return *x.Epoch
	}
	return 0
}

func (x *TrainingStats) GetPrecision() float32 {
	if x != nil && x.Precision != nil {
		return *x.Precision
	}
	return 0
}

func (x *TrainingStats) GetRecall() float32 {
	if x != nil && x.Recall != nil {
		return *x.Recall
	}
	return 0
}

func (x *TrainingStats) GetTruepos() float32 {
	if x != nil && x.Truepos != nil {
		return *x.Truepos
	}
	return 0
}

func (x *TrainingStats) GetTrueneg() float32 {
	if x != nil && x.Trueneg != nil {
		return *x.Trueneg
	}
	return 0
}

func (x *TrainingStats) GetFalsepos() float32 {
	if x != nil && x.Falsepos != nil {
		return *x.Falsepos
	}
	return 0
}

func (x *TrainingStats) GetFalseneg() float32 {
	if x != nil && x.Falseneg != nil {
		return *x.Falseneg
	}
	return 0
}

func (x *TrainingStats) GetF1() float32 {
	if x != nil && x.F1 != nil {
		return *x.F1
	}
	return 0
}

type StatsRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Xapp  *XappIdentifier `protobuf:"bytes,1,opt,name=xapp,proto3" json:"xapp,omitempty"`
	From  *string         `protobuf:"bytes,2,opt,name=from,proto3,oneof" json:"from,omitempty"`
	To    *string         `protobuf:"bytes,3,opt,name=to,proto3,oneof" json:"to,omitempty"`
	Count *int32          `protobuf:"varint,4,opt,name=count,proto3,oneof" json:"count,omitempty"`
}

func (x *StatsRange) Reset() {
	*x = StatsRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatsRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatsRange) ProtoMessage() {}

func (x *StatsRange) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatsRange.ProtoReflect.Descriptor instead.
func (*StatsRange) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{13}
}

func (x *StatsRange) GetXapp() *XappIdentifier {
	if x != nil {
		return x.Xapp
	}
	return nil
}

func (x *StatsRange) GetFrom() string {
	if x != nil && x.From != nil {
		return *x.From
	}
	return ""
}

func (x *StatsRange) GetTo() string {
	if x != nil && x.To != nil {
		return *x.To
	}
	return ""
}

func (x *StatsRange) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

type KeyValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Types that are assignable to Value:
	//
	//	*KeyValue_Str
	//	*KeyValue_I32
	//	*KeyValue_I64
	//	*KeyValue_F
	//	*KeyValue_Byte
	Value isKeyValue_Value `protobuf_oneof:"value"`
}

func (x *KeyValue) Reset() {
	*x = KeyValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyValue) ProtoMessage() {}

func (x *KeyValue) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyValue.ProtoReflect.Descriptor instead.
func (*KeyValue) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{14}
}

func (x *KeyValue) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (m *KeyValue) GetValue() isKeyValue_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *KeyValue) GetStr() string {
	if x, ok := x.GetValue().(*KeyValue_Str); ok {
		return x.Str
	}
	return ""
}

func (x *KeyValue) GetI32() int32 {
	if x, ok := x.GetValue().(*KeyValue_I32); ok {
		return x.I32
	}
	return 0
}

func (x *KeyValue) GetI64() int64 {
	if x, ok := x.GetValue().(*KeyValue_I64); ok {
		return x.I64
	}
	return 0
}

func (x *KeyValue) GetF() float32 {
	if x, ok := x.GetValue().(*KeyValue_F); ok {
		return x.F
	}
	return 0
}

func (x *KeyValue) GetByte() []byte {
	if x, ok := x.GetValue().(*KeyValue_Byte); ok {
		return x.Byte
	}
	return nil
}

type isKeyValue_Value interface {
	isKeyValue_Value()
}

type KeyValue_Str struct {
	Str string `protobuf:"bytes,2,opt,name=str,proto3,oneof"`
}

type KeyValue_I32 struct {
	I32 int32 `protobuf:"varint,3,opt,name=i32,proto3,oneof"`
}

type KeyValue_I64 struct {
	I64 int64 `protobuf:"varint,4,opt,name=i64,proto3,oneof"`
}

type KeyValue_F struct {
	F float32 `protobuf:"fixed32,5,opt,name=f,proto3,oneof"`
}

type KeyValue_Byte struct {
	Byte []byte `protobuf:"bytes,6,opt,name=byte,proto3,oneof"`
}

func (*KeyValue_Str) isKeyValue_Value() {}

func (*KeyValue_I32) isKeyValue_Value() {}

func (*KeyValue_I64) isKeyValue_Value() {}

func (*KeyValue_F) isKeyValue_Value() {}

func (*KeyValue_Byte) isKeyValue_Value() {}

type RecentPredsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Xapp    *XappIdentifier `protobuf:"bytes,1,opt,name=xapp,proto3" json:"xapp,omitempty"`
	Perpage int32           `protobuf:"varint,2,opt,name=perpage,proto3" json:"perpage,omitempty"`
	Page    int32           `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Test    *bool           `protobuf:"varint,15,opt,name=test,proto3,oneof" json:"test,omitempty"`
}

func (x *RecentPredsInput) Reset() {
	*x = RecentPredsInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecentPredsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecentPredsInput) ProtoMessage() {}

func (x *RecentPredsInput) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecentPredsInput.ProtoReflect.Descriptor instead.
func (*RecentPredsInput) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{15}
}

func (x *RecentPredsInput) GetXapp() *XappIdentifier {
	if x != nil {
		return x.Xapp
	}
	return nil
}

func (x *RecentPredsInput) GetPerpage() int32 {
	if x != nil {
		return x.Perpage
	}
	return 0
}

func (x *RecentPredsInput) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *RecentPredsInput) GetTest() bool {
	if x != nil && x.Test != nil {
		return *x.Test
	}
	return false
}

var File_types_proto protoreflect.FileDescriptor

var file_types_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x1a, 0x0a, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x58, 0x0a, 0x04, 0x58, 0x61, 0x70, 0x70, 0x12, 0x2b, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x08, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x58, 0x61, 0x70, 0x70,
	0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x22, 0xd2, 0x05, 0x0a, 0x08, 0x58,
	0x61, 0x70, 0x70, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62,
	0x61, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12,
	0x2c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x14, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x64, 0x64, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x64,
	0x64, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x62, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x62, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x24, 0x0a,
	0x0d, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x61, 0x73, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x6c,
	0x61, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x72, 0x65, 0x64, 0x74, 0x69, 0x6d, 0x65, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x64,
	0x74, 0x69, 0x6d, 0x65, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x65,
	0x64, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72,
	0x65, 0x64, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x66, 0x72, 0x65, 0x71, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x66, 0x72, 0x65, 0x71, 0x52, 0x09, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x66, 0x72,
	0x65, 0x71, 0x12, 0x1f, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x0f, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x6f, 0x52, 0x05, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x88,
	0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x6c, 0x61, 0x73, 0x74, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x6c, 0x61,
	0x73, 0x74, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x05, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x88, 0x01, 0x01,
	0x12, 0x29, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x6a, 0x6f, 0x62, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x6a, 0x6f, 0x62, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x6c,
	0x61, 0x73, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x42, 0x10, 0x0a,
	0x0e, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x6a, 0x6f, 0x62, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22,
	0xe0, 0x04, 0x0a, 0x08, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x28, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x12, 0x25, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x75, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x63, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x63, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x22, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x54,
	0x72, 0x61, 0x69, 0x6e, 0x52, 0x05, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x12, 0x19, 0x0a, 0x02, 0x69,
	0x6f, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x49, 0x6f, 0x52, 0x02, 0x69, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x61, 0x74, 0x61, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x61, 0x74, 0x61, 0x12, 0x34,
	0x0a, 0x0b, 0x74, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x74, 0x6f, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x74, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x08, 0x6d, 0x6f, 0x72, 0x65, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x6f, 0x72, 0x65, 0x69, 0x6e,
	0x66, 0x6f, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x69, 0x6e,
	0x66, 0x6f, 0x22, 0xa5, 0x01, 0x0a, 0x05, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65,
	0x12, 0x2d, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x48, 0x00, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x88, 0x01, 0x01, 0x12,
	0x1e, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x07, 0x73, 0x74, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x88, 0x01, 0x01, 0x12,
	0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x73, 0x74, 0x72, 0x5f, 0x63, 0x68, 0x61,
	0x6e, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x8f, 0x02, 0x0a, 0x02, 0x49,
	0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x48, 0x01, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x02, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x74, 0x72, 0x88, 0x01,
	0x01, 0x12, 0x2d, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x48, 0x03, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x88, 0x01, 0x01,
	0x12, 0x1e, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x04, 0x52, 0x07, 0x73, 0x74, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x88, 0x01, 0x01,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f,
	0x73, 0x74, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x73, 0x74, 0x72, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x22, 0xe9, 0x01, 0x0a,
	0x05, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x6c, 0x61, 0x73, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x6c, 0x61, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x70, 0x61, 0x70, 0x65, 0x72, 0x73,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52,
	0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x70, 0x65, 0x72, 0x52, 0x06, 0x70, 0x61,
	0x70, 0x65, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x2c, 0x0a, 0x06, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x12, 0x22, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52,
	0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x22, 0x0f, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x50, 0x61, 0x70, 0x65, 0x72, 0x22, 0x12, 0x0a, 0x10, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0x2e, 0x0a, 0x08, 0x53,
	0x74, 0x61, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x33, 0x0a, 0x0c, 0x53,
	0x74, 0x61, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x73,
	0x74, 0x61, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x73, 0x74, 0x61, 0x74,
	0x22, 0x40, 0x0a, 0x0e, 0x58, 0x61, 0x70, 0x70, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x78, 0x61, 0x70, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x78, 0x61,
	0x70, 0x70, 0x22, 0xdc, 0x03, 0x0a, 0x0d, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x75, 0x72, 0x61, 0x63, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x48, 0x00, 0x52, 0x08, 0x61, 0x63, 0x63, 0x75, 0x72, 0x61,
	0x63, 0x79, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x62, 0x61, 0x74, 0x63, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x05, 0x62, 0x61, 0x74, 0x63, 0x68, 0x88, 0x01, 0x01,
	0x12, 0x1f, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x02, 0x48, 0x02, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01,
	0x01, 0x12, 0x19, 0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x03, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09,
	0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x48,
	0x04, 0x52, 0x09, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12,
	0x1b, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x48,
	0x05, 0x52, 0x06, 0x72, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07,
	0x74, 0x72, 0x75, 0x65, 0x70, 0x6f, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x48, 0x06, 0x52,
	0x07, 0x74, 0x72, 0x75, 0x65, 0x70, 0x6f, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x74,
	0x72, 0x75, 0x65, 0x6e, 0x65, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x48, 0x07, 0x52, 0x07,
	0x74, 0x72, 0x75, 0x65, 0x6e, 0x65, 0x67, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x66, 0x61,
	0x6c, 0x73, 0x65, 0x70, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x48, 0x08, 0x52, 0x08,
	0x66, 0x61, 0x6c, 0x73, 0x65, 0x70, 0x6f, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x66,
	0x61, 0x6c, 0x73, 0x65, 0x6e, 0x65, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x48, 0x09, 0x52,
	0x08, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x6e, 0x65, 0x67, 0x88, 0x01, 0x01, 0x12, 0x13, 0x0a, 0x02,
	0x66, 0x31, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x48, 0x0a, 0x52, 0x02, 0x66, 0x31, 0x88, 0x01,
	0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x61, 0x63, 0x63, 0x75, 0x72, 0x61, 0x63, 0x79, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x72, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x74, 0x72, 0x75,
	0x65, 0x70, 0x6f, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x74, 0x72, 0x75, 0x65, 0x6e, 0x65, 0x67,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x70, 0x6f, 0x73, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x6e, 0x65, 0x67, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x66,
	0x31, 0x22, 0x9a, 0x01, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x12, 0x29, 0x0a, 0x04, 0x78, 0x61, 0x70, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x58, 0x61, 0x70, 0x70, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x04, 0x78, 0x61, 0x70, 0x70, 0x12, 0x17, 0x0a, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x88, 0x01, 0x01, 0x12, 0x13, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x01, 0x52, 0x02, 0x74, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x42, 0x05, 0x0a,
	0x03, 0x5f, 0x74, 0x6f, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x87,
	0x01, 0x0a, 0x08, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a,
	0x03, 0x73, 0x74, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x73, 0x74,
	0x72, 0x12, 0x12, 0x0a, 0x03, 0x69, 0x33, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00,
	0x52, 0x03, 0x69, 0x33, 0x32, 0x12, 0x12, 0x0a, 0x03, 0x69, 0x36, 0x34, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x00, 0x52, 0x03, 0x69, 0x36, 0x34, 0x12, 0x0e, 0x0a, 0x01, 0x66, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x02, 0x48, 0x00, 0x52, 0x01, 0x66, 0x12, 0x14, 0x0a, 0x04, 0x62, 0x79, 0x74,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x04, 0x62, 0x79, 0x74, 0x65, 0x42,
	0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x63,
	0x65, 0x6e, 0x74, 0x50, 0x72, 0x65, 0x64, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x29, 0x0a,
	0x04, 0x78, 0x61, 0x70, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x58, 0x61, 0x70, 0x70, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x52, 0x04, 0x78, 0x61, 0x70, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x65, 0x72, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x17, 0x0a, 0x04, 0x74, 0x65, 0x73, 0x74, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x04, 0x74, 0x65, 0x73, 0x74, 0x88, 0x01, 0x01, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x42, 0x22, 0x5a, 0x20, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x78, 0x41, 0x6d, 0x62, 0x69, 0x74, 0x2d, 0x61, 0x69,
	0x2f, 0x78, 0x61, 0x69, 0x68, 0x72, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_types_proto_rawDescOnce sync.Once
	file_types_proto_rawDescData = file_types_proto_rawDesc
)

func file_types_proto_rawDescGZIP() []byte {
	file_types_proto_rawDescOnce.Do(func() {
		file_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_types_proto_rawDescData)
	})
	return file_types_proto_rawDescData
}

var file_types_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_types_proto_goTypes = []interface{}{
	(*Xapp)(nil),             // 0: types.Xapp
	(*XappMeta)(nil),         // 1: types.XappMeta
	(*Template)(nil),         // 2: types.Template
	(*Train)(nil),            // 3: types.Train
	(*Io)(nil),               // 4: types.Io
	(*Model)(nil),            // 5: types.Model
	(*Models)(nil),           // 6: types.Models
	(*ResearchPaper)(nil),    // 7: types.ResearchPaper
	(*TemplatesFilters)(nil), // 8: types.TemplatesFilters
	(*StatMeta)(nil),         // 9: types.StatMeta
	(*StatMetaCont)(nil),     // 10: types.StatMetaCont
	(*XappIdentifier)(nil),   // 11: types.XappIdentifier
	(*TrainingStats)(nil),    // 12: types.TrainingStats
	(*StatsRange)(nil),       // 13: types.StatsRange
	(*KeyValue)(nil),         // 14: types.KeyValue
	(*RecentPredsInput)(nil), // 15: types.RecentPredsInput
	(Templatestate)(0),       // 16: types.templatestate
	(Freq)(0),                // 17: types.freq
	(Channel)(0),             // 18: types.channel
	(Domain)(0),              // 19: types.domain
	(Tointegrate)(0),         // 20: types.tointegrate
}
var file_types_proto_depIdxs = []int32{
	2,  // 0: types.Xapp.template:type_name -> types.Template
	1,  // 1: types.Xapp.meta:type_name -> types.XappMeta
	16, // 2: types.XappMeta.status:type_name -> types.templatestate
	17, // 3: types.XappMeta.trainfreq:type_name -> types.freq
	4,  // 4: types.XappMeta.input:type_name -> types.Io
	18, // 5: types.Template.channel:type_name -> types.channel
	19, // 6: types.Template.domain:type_name -> types.domain
	3,  // 7: types.Template.train:type_name -> types.Train
	4,  // 8: types.Template.io:type_name -> types.Io
	20, // 9: types.Template.tointegrate:type_name -> types.tointegrate
	18, // 10: types.Train.channel:type_name -> types.channel
	16, // 11: types.Io.status:type_name -> types.templatestate
	18, // 12: types.Io.channel:type_name -> types.channel
	7,  // 13: types.Model.papers:type_name -> types.ResearchPaper
	5,  // 14: types.Models.model:type_name -> types.Model
	9,  // 15: types.StatMetaCont.stat:type_name -> types.StatMeta
	11, // 16: types.StatsRange.xapp:type_name -> types.XappIdentifier
	11, // 17: types.RecentPredsInput.xapp:type_name -> types.XappIdentifier
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_types_proto_init() }
func file_types_proto_init() {
	if File_types_proto != nil {
		return
	}
	file_enum_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Xapp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XappMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Template); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Train); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Io); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Model); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Models); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResearchPaper); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplatesFilters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatMetaCont); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XappIdentifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrainingStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatsRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecentPredsInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_types_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_types_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_types_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_types_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_types_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_types_proto_msgTypes[13].OneofWrappers = []interface{}{}
	file_types_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*KeyValue_Str)(nil),
		(*KeyValue_I32)(nil),
		(*KeyValue_I64)(nil),
		(*KeyValue_F)(nil),
		(*KeyValue_Byte)(nil),
	}
	file_types_proto_msgTypes[15].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_types_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_types_proto_goTypes,
		DependencyIndexes: file_types_proto_depIdxs,
		MessageInfos:      file_types_proto_msgTypes,
	}.Build()
	File_types_proto = out.File
	file_types_proto_rawDesc = nil
	file_types_proto_goTypes = nil
	file_types_proto_depIdxs = nil
}
