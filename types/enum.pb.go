// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.3
// source: enum.proto

package types

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// An enum type that defines the channel org is in
type Channel int32

const (
	Channel_DEAD  Channel = 0
	Channel_DEV   Channel = 1
	Channel_ALPHA Channel = 2
	Channel_BETA  Channel = 3
	Channel_TRIAL Channel = 4
	Channel_LIVE  Channel = 5
)

// Enum value maps for Channel.
var (
	Channel_name = map[int32]string{
		0: "DEAD",
		1: "DEV",
		2: "ALPHA",
		3: "BETA",
		4: "TRIAL",
		5: "LIVE",
	}
	Channel_value = map[string]int32{
		"DEAD":  0,
		"DEV":   1,
		"ALPHA": 2,
		"BETA":  3,
		"TRIAL": 4,
		"LIVE":  5,
	}
)

func (x Channel) Enum() *Channel {
	p := new(Channel)
	*p = x
	return p
}

func (x Channel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Channel) Descriptor() protoreflect.EnumDescriptor {
	return file_enum_proto_enumTypes[0].Descriptor()
}

func (Channel) Type() protoreflect.EnumType {
	return &file_enum_proto_enumTypes[0]
}

func (x Channel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Channel.Descriptor instead.
func (Channel) EnumDescriptor() ([]byte, []int) {
	return file_enum_proto_rawDescGZIP(), []int{0}
}

// An enum to represent the user's role in the org
type Perm int32

const (
	Perm_ACCOUNT   Perm = 0
	Perm_USR       Perm = 1
	Perm_ADMIN     Perm = 2
	Perm_ROOT      Perm = 3
	Perm_PRINCIPAL Perm = 4
)

// Enum value maps for Perm.
var (
	Perm_name = map[int32]string{
		0: "ACCOUNT",
		1: "USR",
		2: "ADMIN",
		3: "ROOT",
		4: "PRINCIPAL",
	}
	Perm_value = map[string]int32{
		"ACCOUNT":   0,
		"USR":       1,
		"ADMIN":     2,
		"ROOT":      3,
		"PRINCIPAL": 4,
	}
)

func (x Perm) Enum() *Perm {
	p := new(Perm)
	*p = x
	return p
}

func (x Perm) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Perm) Descriptor() protoreflect.EnumDescriptor {
	return file_enum_proto_enumTypes[1].Descriptor()
}

func (Perm) Type() protoreflect.EnumType {
	return &file_enum_proto_enumTypes[1]
}

func (x Perm) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Perm.Descriptor instead.
func (Perm) EnumDescriptor() ([]byte, []int) {
	return file_enum_proto_rawDescGZIP(), []int{1}
}

// enum defining template status
type Templatestate int32

const (
	Templatestate_PREVIEW  Templatestate = 0
	Templatestate_DATA     Templatestate = 1
	Templatestate_TRAINING Templatestate = 2
	Templatestate_TRAINED  Templatestate = 3
	Templatestate_RUN      Templatestate = 4
	Templatestate_PAUSE    Templatestate = 5
)

// Enum value maps for Templatestate.
var (
	Templatestate_name = map[int32]string{
		0: "PREVIEW",
		1: "DATA",
		2: "TRAINING",
		3: "TRAINED",
		4: "RUN",
		5: "PAUSE",
	}
	Templatestate_value = map[string]int32{
		"PREVIEW":  0,
		"DATA":     1,
		"TRAINING": 2,
		"TRAINED":  3,
		"RUN":      4,
		"PAUSE":    5,
	}
)

func (x Templatestate) Enum() *Templatestate {
	p := new(Templatestate)
	*p = x
	return p
}

func (x Templatestate) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Templatestate) Descriptor() protoreflect.EnumDescriptor {
	return file_enum_proto_enumTypes[2].Descriptor()
}

func (Templatestate) Type() protoreflect.EnumType {
	return &file_enum_proto_enumTypes[2]
}

func (x Templatestate) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Templatestate.Descriptor instead.
func (Templatestate) EnumDescriptor() ([]byte, []int) {
	return file_enum_proto_rawDescGZIP(), []int{2}
}

// training frequency
type Freq int32

const (
	Freq_DAY    Freq = 0
	Freq_WEEK   Freq = 1
	Freq_MONTH  Freq = 2
	Freq_MANUAL Freq = 3
)

// Enum value maps for Freq.
var (
	Freq_name = map[int32]string{
		0: "DAY",
		1: "WEEK",
		2: "MONTH",
		3: "MANUAL",
	}
	Freq_value = map[string]int32{
		"DAY":    0,
		"WEEK":   1,
		"MONTH":  2,
		"MANUAL": 3,
	}
)

func (x Freq) Enum() *Freq {
	p := new(Freq)
	*p = x
	return p
}

func (x Freq) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Freq) Descriptor() protoreflect.EnumDescriptor {
	return file_enum_proto_enumTypes[3].Descriptor()
}

func (Freq) Type() protoreflect.EnumType {
	return &file_enum_proto_enumTypes[3]
}

func (x Freq) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Freq.Descriptor instead.
func (Freq) EnumDescriptor() ([]byte, []int) {
	return file_enum_proto_rawDescGZIP(), []int{3}
}

// device types
type Device int32

const (
	Device_IOS     Device = 0
	Device_ANDROID Device = 1
	Device_WEB     Device = 2
	Device_API     Device = 3
)

// Enum value maps for Device.
var (
	Device_name = map[int32]string{
		0: "IOS",
		1: "ANDROID",
		2: "WEB",
		3: "API",
	}
	Device_value = map[string]int32{
		"IOS":     0,
		"ANDROID": 1,
		"WEB":     2,
		"API":     3,
	}
)

func (x Device) Enum() *Device {
	p := new(Device)
	*p = x
	return p
}

func (x Device) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Device) Descriptor() protoreflect.EnumDescriptor {
	return file_enum_proto_enumTypes[4].Descriptor()
}

func (Device) Type() protoreflect.EnumType {
	return &file_enum_proto_enumTypes[4]
}

func (x Device) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Device.Descriptor instead.
func (Device) EnumDescriptor() ([]byte, []int) {
	return file_enum_proto_rawDescGZIP(), []int{4}
}

// session kind
type Sessionkind int32

const (
	Sessionkind_PWD    Sessionkind = 0
	Sessionkind_GOOGLE Sessionkind = 1
	Sessionkind_MS     Sessionkind = 2
	Sessionkind_GITHUB Sessionkind = 3
)

// Enum value maps for Sessionkind.
var (
	Sessionkind_name = map[int32]string{
		0: "PWD",
		1: "GOOGLE",
		2: "MS",
		3: "GITHUB",
	}
	Sessionkind_value = map[string]int32{
		"PWD":    0,
		"GOOGLE": 1,
		"MS":     2,
		"GITHUB": 3,
	}
)

func (x Sessionkind) Enum() *Sessionkind {
	p := new(Sessionkind)
	*p = x
	return p
}

func (x Sessionkind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Sessionkind) Descriptor() protoreflect.EnumDescriptor {
	return file_enum_proto_enumTypes[5].Descriptor()
}

func (Sessionkind) Type() protoreflect.EnumType {
	return &file_enum_proto_enumTypes[5]
}

func (x Sessionkind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Sessionkind.Descriptor instead.
func (Sessionkind) EnumDescriptor() ([]byte, []int) {
	return file_enum_proto_rawDescGZIP(), []int{5}
}

type Tointegrate int32

const (
	Tointegrate_SECONDS Tointegrate = 0
	Tointegrate_MINUTES Tointegrate = 1
	Tointegrate_HOURS   Tointegrate = 2
	Tointegrate_DAYS    Tointegrate = 3
	Tointegrate_WEEKS   Tointegrate = 4
	Tointegrate_LONG    Tointegrate = 5
)

// Enum value maps for Tointegrate.
var (
	Tointegrate_name = map[int32]string{
		0: "SECONDS",
		1: "MINUTES",
		2: "HOURS",
		3: "DAYS",
		4: "WEEKS",
		5: "LONG",
	}
	Tointegrate_value = map[string]int32{
		"SECONDS": 0,
		"MINUTES": 1,
		"HOURS":   2,
		"DAYS":    3,
		"WEEKS":   4,
		"LONG":    5,
	}
)

func (x Tointegrate) Enum() *Tointegrate {
	p := new(Tointegrate)
	*p = x
	return p
}

func (x Tointegrate) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Tointegrate) Descriptor() protoreflect.EnumDescriptor {
	return file_enum_proto_enumTypes[6].Descriptor()
}

func (Tointegrate) Type() protoreflect.EnumType {
	return &file_enum_proto_enumTypes[6]
}

func (x Tointegrate) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Tointegrate.Descriptor instead.
func (Tointegrate) EnumDescriptor() ([]byte, []int) {
	return file_enum_proto_rawDescGZIP(), []int{6}
}

type Modeltype int32

const (
	Modeltype_SERVICE    Modeltype = 0
	Modeltype_PICKLE     Modeltype = 1
	Modeltype_ONNX       Modeltype = 2
	Modeltype_JSON       Modeltype = 3
	Modeltype_SAVEDMODEL Modeltype = 4
	Modeltype_GRAPH      Modeltype = 5
)

// Enum value maps for Modeltype.
var (
	Modeltype_name = map[int32]string{
		0: "SERVICE",
		1: "PICKLE",
		2: "ONNX",
		3: "JSON",
		4: "SAVEDMODEL",
		5: "GRAPH",
	}
	Modeltype_value = map[string]int32{
		"SERVICE":    0,
		"PICKLE":     1,
		"ONNX":       2,
		"JSON":       3,
		"SAVEDMODEL": 4,
		"GRAPH":      5,
	}
)

func (x Modeltype) Enum() *Modeltype {
	p := new(Modeltype)
	*p = x
	return p
}

func (x Modeltype) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Modeltype) Descriptor() protoreflect.EnumDescriptor {
	return file_enum_proto_enumTypes[7].Descriptor()
}

func (Modeltype) Type() protoreflect.EnumType {
	return &file_enum_proto_enumTypes[7]
}

func (x Modeltype) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Modeltype.Descriptor instead.
func (Modeltype) EnumDescriptor() ([]byte, []int) {
	return file_enum_proto_rawDescGZIP(), []int{7}
}

// An enum type that defines the channel org is in
type Domain int32

const (
	Domain_Other  Domain = 0
	Domain_Lang   Domain = 1
	Domain_Vision Domain = 2
)

// Enum value maps for Domain.
var (
	Domain_name = map[int32]string{
		0: "Other",
		1: "Lang",
		2: "Vision",
	}
	Domain_value = map[string]int32{
		"Other":  0,
		"Lang":   1,
		"Vision": 2,
	}
)

func (x Domain) Enum() *Domain {
	p := new(Domain)
	*p = x
	return p
}

func (x Domain) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Domain) Descriptor() protoreflect.EnumDescriptor {
	return file_enum_proto_enumTypes[8].Descriptor()
}

func (Domain) Type() protoreflect.EnumType {
	return &file_enum_proto_enumTypes[8]
}

func (x Domain) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Domain.Descriptor instead.
func (Domain) EnumDescriptor() ([]byte, []int) {
	return file_enum_proto_rawDescGZIP(), []int{8}
}

var File_enum_proto protoreflect.FileDescriptor

var file_enum_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2a, 0x46, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x08,
	0x0a, 0x04, 0x44, 0x45, 0x41, 0x44, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x44, 0x45, 0x56, 0x10,
	0x01, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x4c, 0x50, 0x48, 0x41, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04,
	0x42, 0x45, 0x54, 0x41, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x52, 0x49, 0x41, 0x4c, 0x10,
	0x04, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x49, 0x56, 0x45, 0x10, 0x05, 0x2a, 0x40, 0x0a, 0x04, 0x70,
	0x65, 0x72, 0x6d, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x00,
	0x12, 0x07, 0x0a, 0x03, 0x55, 0x53, 0x52, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x44, 0x4d,
	0x49, 0x4e, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x52, 0x4f, 0x4f, 0x54, 0x10, 0x03, 0x12, 0x0d,
	0x0a, 0x09, 0x50, 0x52, 0x49, 0x4e, 0x43, 0x49, 0x50, 0x41, 0x4c, 0x10, 0x04, 0x2a, 0x55, 0x0a,
	0x0d, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0b,
	0x0a, 0x07, 0x50, 0x52, 0x45, 0x56, 0x49, 0x45, 0x57, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x44,
	0x41, 0x54, 0x41, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x52, 0x41, 0x49, 0x4e, 0x49, 0x4e,
	0x47, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x52, 0x41, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x03,
	0x12, 0x07, 0x0a, 0x03, 0x52, 0x55, 0x4e, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x50, 0x41, 0x55,
	0x53, 0x45, 0x10, 0x05, 0x2a, 0x30, 0x0a, 0x04, 0x66, 0x72, 0x65, 0x71, 0x12, 0x07, 0x0a, 0x03,
	0x44, 0x41, 0x59, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x57, 0x45, 0x45, 0x4b, 0x10, 0x01, 0x12,
	0x09, 0x0a, 0x05, 0x4d, 0x4f, 0x4e, 0x54, 0x48, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x41,
	0x4e, 0x55, 0x41, 0x4c, 0x10, 0x03, 0x2a, 0x30, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x07, 0x0a, 0x03, 0x49, 0x4f, 0x53, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x4e, 0x44,
	0x52, 0x4f, 0x49, 0x44, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x57, 0x45, 0x42, 0x10, 0x02, 0x12,
	0x07, 0x0a, 0x03, 0x41, 0x50, 0x49, 0x10, 0x03, 0x2a, 0x36, 0x0a, 0x0b, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x57, 0x44, 0x10, 0x00,
	0x12, 0x0a, 0x0a, 0x06, 0x47, 0x4f, 0x4f, 0x47, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x06, 0x0a, 0x02,
	0x4d, 0x53, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x47, 0x49, 0x54, 0x48, 0x55, 0x42, 0x10, 0x03,
	0x2a, 0x51, 0x0a, 0x0b, 0x74, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x12,
	0x0b, 0x0a, 0x07, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x53, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07,
	0x4d, 0x49, 0x4e, 0x55, 0x54, 0x45, 0x53, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x48, 0x4f, 0x55,
	0x52, 0x53, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x41, 0x59, 0x53, 0x10, 0x03, 0x12, 0x09,
	0x0a, 0x05, 0x57, 0x45, 0x45, 0x4b, 0x53, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x4f, 0x4e,
	0x47, 0x10, 0x05, 0x2a, 0x53, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x0b, 0x0a, 0x07, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a,
	0x06, 0x50, 0x49, 0x43, 0x4b, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x4f, 0x4e, 0x4e,
	0x58, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x4a, 0x53, 0x4f, 0x4e, 0x10, 0x03, 0x12, 0x0e, 0x0a,
	0x0a, 0x53, 0x41, 0x56, 0x45, 0x44, 0x4d, 0x4f, 0x44, 0x45, 0x4c, 0x10, 0x04, 0x12, 0x09, 0x0a,
	0x05, 0x47, 0x52, 0x41, 0x50, 0x48, 0x10, 0x05, 0x2a, 0x29, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x12, 0x09, 0x0a, 0x05, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x10, 0x00, 0x12, 0x08, 0x0a,
	0x04, 0x4c, 0x61, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x56, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x10, 0x02, 0x42, 0x0d, 0x5a, 0x0b, 0x78, 0x61, 0x69, 0x68, 0x72, 0x2f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_enum_proto_rawDescOnce sync.Once
	file_enum_proto_rawDescData = file_enum_proto_rawDesc
)

func file_enum_proto_rawDescGZIP() []byte {
	file_enum_proto_rawDescOnce.Do(func() {
		file_enum_proto_rawDescData = protoimpl.X.CompressGZIP(file_enum_proto_rawDescData)
	})
	return file_enum_proto_rawDescData
}

var file_enum_proto_enumTypes = make([]protoimpl.EnumInfo, 9)
var file_enum_proto_goTypes = []interface{}{
	(Channel)(0),       // 0: types.channel
	(Perm)(0),          // 1: types.perm
	(Templatestate)(0), // 2: types.templatestate
	(Freq)(0),          // 3: types.freq
	(Device)(0),        // 4: types.device
	(Sessionkind)(0),   // 5: types.sessionkind
	(Tointegrate)(0),   // 6: types.tointegrate
	(Modeltype)(0),     // 7: types.modeltype
	(Domain)(0),        // 8: types.domain
}
var file_enum_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_enum_proto_init() }
func file_enum_proto_init() {
	if File_enum_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_enum_proto_rawDesc,
			NumEnums:      9,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_enum_proto_goTypes,
		DependencyIndexes: file_enum_proto_depIdxs,
		EnumInfos:         file_enum_proto_enumTypes,
	}.Build()
	File_enum_proto = out.File
	file_enum_proto_rawDesc = nil
	file_enum_proto_goTypes = nil
	file_enum_proto_depIdxs = nil
}
